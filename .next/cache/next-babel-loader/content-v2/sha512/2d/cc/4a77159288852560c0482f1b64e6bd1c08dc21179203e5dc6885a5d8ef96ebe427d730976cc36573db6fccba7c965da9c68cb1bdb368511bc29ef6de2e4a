{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ghost-2306/Labo/contact_book/public/components/ContactsList.js\";\nimport { useState, useEffect } from 'react';\nexport function ContactsList() {\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: contactList,\n    1: setContactList\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3003/contacts\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then(rep => rep.json()).then(result => {\n      setIsLoaded(true);\n      setContactList(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  console.log(contactList);\n\n  if (error) {\n    console.log(error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something went wrong...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  } else if (isLoaded === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  } else {\n    /**\n     * <div className=\"card_top\">\n                        <h3>{contact.pseudo}</h3>\n                    </div>\n                    <div className=\"card_middle\">\n                        <p>{contact.lastnalme}</p>\n                        <p>{contact.firstname}</p>\n                    </div>\n                    <div className=\"card_infoSup\">\n                        <p>{contact.email}</p>\n                        <p>{contact.telephone}</p>\n                    </div>\n     */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contacts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_contact\",\n        children: contactList.map(contact => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: contact.pseudo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 31\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"sources":["/home/ghost-2306/Labo/contact_book/public/components/ContactsList.js"],"names":["useState","useEffect","ContactsList","isLoaded","setIsLoaded","contactList","setContactList","error","setError","fetch","headers","method","then","rep","json","result","console","log","map","contact","pseudo"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,YAAT,GAAwB;AAE3B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAD2B;AAKpCC,MAAAA,MAAM,EAAE;AAL4B,KAAnC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CASKG,MAAD,IAAY;AACRX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,cAAc,CAACS,MAAD,CAAd;AACH,KAZL,EAaKR,KAAD,IAAW;AACPH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAhBL;AAkBH,GAnBQ,EAmBN,EAnBM,CAAT;AAqBAS,EAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;;AACA,MAAIE,KAAJ,EAAW;AACPS,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHD,MAIK,IAAIJ,QAAQ,KAAK,KAAjB,EAAwB;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFI,MAGA;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,wBACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACKE,WAAW,CAACa,GAAZ,CAAgBC,OAAO,IAAI;AACxB,8BAAO;AAAA,sBAAMA,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function ContactsList() {\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [contactList, setContactList] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(\"http://localhost:3003/contacts\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            method: 'GET'\n        })\n        .then(rep => rep.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);\n                setContactList(result);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error)\n            }\n        )\n    }, [])\n\n    console.log(contactList)\n    if (error) {\n        console.log(error)\n        return <div>Something went wrong...</div>\n    }\n    else if (isLoaded === false) {\n        return <div>Loading...</div>\n    }\n    else {\n        /**\n         * <div className=\"card_top\">\n                            <h3>{contact.pseudo}</h3>\n                        </div>\n                        <div className=\"card_middle\">\n                            <p>{contact.lastnalme}</p>\n                            <p>{contact.firstname}</p>\n                        </div>\n                        <div className=\"card_infoSup\">\n                            <p>{contact.email}</p>\n                            <p>{contact.telephone}</p>\n                        </div>\n         */\n        return (\n            <div id=\"contacts\">                \n               <div className=\"card_contact\">\n                   {contactList.map(contact => {\n                       return <div>{contact.pseudo}</div>\n                   })}\n               </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}