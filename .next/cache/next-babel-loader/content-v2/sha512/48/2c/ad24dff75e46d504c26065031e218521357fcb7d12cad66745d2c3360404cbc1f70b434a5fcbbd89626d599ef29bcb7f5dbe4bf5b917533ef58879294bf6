{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ghost-2306/Labo/contact-book/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport { Form } from \"../public/components/Form\";\nimport { Card } from \"../public/components/Card\";\nimport { Searchbar } from \"../public/components/Searchbar\";\nimport { useState, useEffect } from 'react';\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  //path search pseudo //! localhost:3003/contacts?pseudo=${variable}\n  var _useState = useState(false),\n      isLoaded = _useState[0],\n      setIsLoaded = _useState[1];\n\n  var _useState2 = useState([]),\n      contactList = _useState2[0],\n      setContactList = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      formVisiblity = _useState4[0],\n      setFormVisiblity = _useState4[1];\n\n  var _useState5 = useState(0),\n      contactPseudo = _useState5[0],\n      setContactPseudo = _useState5[1];\n\n  var _useState6 = useState({}),\n      formObj = _useState6[0],\n      setFormObj = _useState6[1];\n\n  useEffect(function () {\n    fetch(\"http://localhost:3003/contacts\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then(function (rep) {\n      return rep.json();\n    }).then(function (result) {\n      setContactList(result);\n      setIsLoaded(true);\n    }, function (error) {\n      setError(error);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  function handleClick(e) {\n    setFormVisiblity(true);\n    var element = e.target; //adding a new contact\n\n    if (element.id === \"btn_add_contact\") {\n      console.log(\"hello friend\");\n    } //modify existing contact\n    else {\n        //cas click imprécis\n        while (element.className !== \"card_contact\") {\n          element = element.parentElement;\n        } //send props to Form\n        //setContactPseudo(element.querySelector(\".contact_pseudo\").textContent);\n\n\n        setContactPseudo(element.dataset.id); //console.log(contactPseudo)\n\n        setFormObj(contactList[contactPseudo]); //! utiliser plus tard\n      }\n\n    console.log(e);\n  }\n\n  function searchBarChange(e) {\n    console.log(e);\n  }\n\n  if (error) {\n    console.log(error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something went wrong...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  } else if (isLoaded === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My contact book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn_add_contact\",\n          onClick: handleClick,\n          children: \"New contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n        onChange: searchBarChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contacts\",\n        onClick: handleClick,\n        children: contactList.map(function (contact, index) {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            id: index,\n            pseudo: contact.pseudo,\n            firstname: contact.firstname,\n            lastname: contact.lastname,\n            birthdate: contact.birthdate,\n            email: contact.email,\n            telephone: contact.telephone,\n            twitter: contact.twitter,\n            instagram: contact.instagram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(HomePage, \"5ihOEG0J4jRP3+Lde6Co0Nc/Xk8=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/ghost-2306/Labo/contact-book/pages/index.js"],"names":["Form","Card","Searchbar","useState","useEffect","HomePage","isLoaded","setIsLoaded","contactList","setContactList","error","setError","formVisiblity","setFormVisiblity","contactPseudo","setContactPseudo","formObj","setFormObj","fetch","headers","method","then","rep","json","result","handleClick","e","element","target","id","console","log","className","parentElement","dataset","searchBarChange","map","contact","index","pseudo","firstname","lastname","birthdate","email","telephone","twitter","instagram"],"mappings":"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","sourcesContent":["import { Form } from \"../public/components/Form\"\nimport { Card } from \"../public/components/Card\"\nimport { Searchbar } from \"../public/components/Searchbar\"\nimport { useState, useEffect } from 'react';\n\nfunction HomePage() {\n\n    //path search pseudo //! localhost:3003/contacts?pseudo=${variable}\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [contactList, setContactList] = useState([]);\n    const [error, setError] = useState(null);\n\n    const [formVisiblity, setFormVisiblity] = useState(false);\n    const [contactPseudo, setContactPseudo] = useState(0);\n    const [formObj, setFormObj] = useState({})\n\n    useEffect(() => {\n        \n        fetch(\"http://localhost:3003/contacts\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            method: 'GET'\n        })\n        .then(rep => rep.json())\n        .then(\n            (result) => {\n                setContactList(result);\n                setIsLoaded(true);\n            },\n            (error) => {\n                setError(error)\n                setIsLoaded(true);\n            }\n        )\n    }, [])\n\n    function handleClick(e) {\n        setFormVisiblity(true);\n        let element = e.target;\n        \n        //adding a new contact\n        if (element.id === \"btn_add_contact\") {\n            console.log(\"hello friend\")\n        }\n        //modify existing contact\n        else {\n\n            //cas click imprécis\n            while (element.className !== \"card_contact\") {\n                element = element.parentElement\n            }\n            //send props to Form\n            //setContactPseudo(element.querySelector(\".contact_pseudo\").textContent);\n            setContactPseudo(element.dataset.id);\n            //console.log(contactPseudo)\n            setFormObj(contactList[contactPseudo]) //! utiliser plus tard\n            \n        }\n\n        console.log(e)\n    }\n\n    function searchBarChange(e) {\n        console.log(e)\n    }\n\n    if (error) {\n        console.log(error)\n        return <div>Something went wrong...</div>\n    }\n    else if (isLoaded === false) {\n        return <div>Loading...</div>\n    }\n    else {\n        \n        return (\n            <div id=\"app\">\n                <div id=\"app_header\">\n                    <h1>My contact book</h1>\n                    <button id=\"btn_add_contact\" onClick={handleClick}>New contact</button>\n                </div>\n                <Searchbar onChange={searchBarChange} />\n                <div id=\"contacts\" onClick={handleClick}>                \n                    {contactList.map((contact, index) => {\n                        return (\n                        <Card\n                            id={index}\n                            pseudo={contact.pseudo}\n                            firstname={contact.firstname}\n                            lastname={contact.lastname}\n                            birthdate={contact.birthdate}\n                            email={contact.email}\n                            telephone={contact.telephone}\n                            twitter={contact.twitter}\n                            instagram={contact.instagram}\n                        />\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}