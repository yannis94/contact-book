{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ghost-2306/Labo/contact_book/public/components/ContactsList.js\";\nexport function ContactsList() {\n  var _this = this;\n\n  var contact_list = {};\n  fetch(\"http://localhost:3003/contacts\", {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (rep) {\n    return rep.json().then(function (db) {\n      for (var contact in db) {\n        contact_list[contact] = db[contact];\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contact_container\",\n    children: contact_list.map(function (el) {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: el.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/home/ghost-2306/Labo/contact_book/public/components/ContactsList.js"],"names":["ContactsList","contact_list","fetch","headers","method","then","rep","json","db","contact","map","el","firstname"],"mappings":";;AAAA,OAAO,SAASA,YAAT,GAAwB;AAAA;;AAC3B,MAAIC,YAAY,GAAG,EAAnB;AAGAC,EAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAD2B;AAKpCC,IAAAA,MAAM,EAAE;AAL4B,GAAnC,CAAL,CAOCC,IAPD,CAOM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,GACZF,IADY,CACP,UAAAG,EAAE,EAAI;AACR,WAAK,IAAMC,OAAX,IAAsBD,EAAtB,EAA0B;AACtBP,QAAAA,YAAY,CAACQ,OAAD,CAAZ,GAAwBD,EAAE,CAACC,OAAD,CAA1B;AACH;AACJ,KALY,CAAJ;AAAA,GAPT;AAaA,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA,cAEOR,YAAY,CAACS,GAAb,CAAiB,UAACC,EAAD,EAAQ;AACrB;AAAA;AAAA,kBAAIA,EAAE,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA;AACH,KAFD;AAFP;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;KA1BeZ,Y","sourcesContent":["export function ContactsList() {\n    let contact_list = {}\n\n\n    fetch(\"http://localhost:3003/contacts\", {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n        method: 'GET'\n    })\n    .then(rep => rep.json()\n    .then(db => {\n        for (const contact in db) {\n            contact_list[contact] = db[contact]\n        }\n    }))\n    return (\n        <div id=\"contact_container\">\n           {\n               contact_list.map((el) => {\n                   <p>{el.firstname}</p>\n               })\n           }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}