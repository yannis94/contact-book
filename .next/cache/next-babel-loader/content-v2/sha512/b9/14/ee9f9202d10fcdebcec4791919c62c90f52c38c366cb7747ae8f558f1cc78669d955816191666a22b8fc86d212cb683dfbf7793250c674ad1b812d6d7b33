{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ghost-2306/Labo/contact_book/public/components/ContactsList.js\";\nexport function ContactsList() {\n  let contact_list = {};\n  fetch(\"http://localhost:3003/contacts\", {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(rep => rep.json().then(db => {\n    for (const contact in db) {\n      contact_list[contact] = db[contact];\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contact_container\",\n    children: contact_list.map(ctc => {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: ctc.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ghost-2306/Labo/contact_book/public/components/ContactsList.js"],"names":["ContactsList","contact_list","fetch","headers","method","then","rep","json","db","contact","map","ctc","firstname"],"mappings":";;AAAA,OAAO,SAASA,YAAT,GAAwB;AAC3B,MAAIC,YAAY,GAAG,EAAnB;AAGAC,EAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAD2B;AAKpCC,IAAAA,MAAM,EAAE;AAL4B,GAAnC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,GACZF,IADY,CACPG,EAAE,IAAI;AACR,SAAK,MAAMC,OAAX,IAAsBD,EAAtB,EAA0B;AACtBP,MAAAA,YAAY,CAACQ,OAAD,CAAZ,GAAwBD,EAAE,CAACC,OAAD,CAA1B;AACH;AACJ,GALY,CAPb;AAaA,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA,cACIR,YAAY,CAACS,GAAb,CAAiBC,GAAG,IAAI;AACrB;AAAA;AAAA,kBAAIA,GAAG,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA;AACH,KAFA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH","sourcesContent":["export function ContactsList() {\n    let contact_list = {}\n\n\n    fetch(\"http://localhost:3003/contacts\", {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n        method: 'GET'\n    })\n    .then(rep => rep.json()\n    .then(db => {\n        for (const contact in db) {\n            contact_list[contact] = db[contact]\n        }\n    }))\n    return (\n        <div id=\"contact_container\">\n           {contact_list.map(ctc => {\n               <p>{ctc.firstname}</p>\n           })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}